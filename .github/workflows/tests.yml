name: simple-utf8-cpp tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        build_type: [Debug, Release]
        os: [macos-latest, ubuntu-latest]
        cpp_compiler: [g++-13, clang++]
        include:
          - os: ubuntu-latest
            c_compiler: gcc-13
            cpp_compiler: g++-13
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: macos-latest
            cpp_compiler: g++-13
          - os: ubuntu-latest
            cpp_compiler: clang++
          # - os: windows-latest
          #   cpp_compiler: cl

    steps:
    - uses: actions/checkout@v3

    - name: Install Conan
      run: pip install conan

    - name: Configure Conan
      run: conan profile detect

    - name: Install Requirements
      run: >
        conan install .
        --output-folder=${{ runner.workspace }}/build
        --build=missing -s compiler.cppstd=20
        -s build_type=${{ matrix.build_type }}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      run: >
        cmake -B ${{ runner.workspace }}/build  -S ${{ github.workspace }}
        -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DSIMPLE_UTF8_TEST=1

    - name: Run Tests
      working-directory: ${{runner.workspace}}/build/tests
      run: make run-tests

    - name: Run Benchmark
      working-directory: ${{runner.workspace}}/build
      run: make run-benchmark
